name: Build ECR image

on:
  push:
    branches:
      - master
jobs:
  sonar-scanner:
    runs-on: ubuntu-latest
    environment:
      name: aws

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        exclude: []

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
            java-version: '17'
            distribution: 'adopt'
            cache: maven

      - name: Sonar Scanner
        env:
          GIT_HUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: | 
          mvn -B verify sonar:sonar \
          -Dsonar.projectKey=HenriqueSaKi_fiap-tech-challenge-customer \
          -Dsonar.organization=henriquesaki \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN

  deploy-ECR:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Authenticate on AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: 'us-east-1'

      - name: Connecting to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t customer:latest .

#      - name: Publish to ECR
#        env:
#          ECR_URL: ""
#        run: |
#          docker tag customer:latest $ECR_URL/customer:latest
#          docker push $ECR_URL/customer:latest
